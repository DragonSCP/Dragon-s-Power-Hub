local AutoClickModule = {}

local Players = game:GetService("Players")
local VirtualUser = game:GetService("VirtualUser")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

function AutoClickModule.Click()
    VirtualUser:CaptureController()
    VirtualUser:Button1Down(Vector2.new(1280, 672))
    wait(0.1)  -- Delay de 0,1 segundo entre cliques
    VirtualUser:Button1Up(Vector2.new(1280, 672))  -- Solta o botão do mouse
end

function AutoClickModule.StartAutoClick()
    while _G.AutoClick do  -- Loop infinito enquanto AutoClick estiver ativo
        pcall(function()
            AutoClickModule.Click()
        end)
        wait(0.1)  -- Atraso de 0,1 segundo entre os cliques
    end
end

function AutoClickModule.AutoHaki()
    if not Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
        ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso")
    end
end

function AutoClickModule.UnEquipWeapon(Weapon)
    if Players.LocalPlayer.Character:FindFirstChild(Weapon) then
        _G.NotAutoEquip = true
        wait(0.5)
        Players.LocalPlayer.Character:FindFirstChild(Weapon).Parent = Players.LocalPlayer.Backpack
        wait(0.1)
        _G.NotAutoEquip = false
    end
end

function AutoClickModule.EquipWeapon(ToolSe)
    if not _G.NotAutoEquip then
        if Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
            local Tool = Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
            wait(0.1)
            Players.LocalPlayer.Character.Humanoid:EquipTool(Tool)
        end
    end
end

function AutoClickModule.GetDistance(target)
    return math.floor((target.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
end

function AutoClickModule.TP(Pos)
    local Distance = (Pos.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    local Speed

    if Distance < 25 then
        Speed = 10000
    elseif Distance < 50 then
        Speed = 2000
    elseif Distance < 150 then
        Speed = 800
    elseif Distance < 250 then
        Speed = 600
    elseif Distance < 500 then
        Speed = 400
    elseif Distance < 750 then
        Speed = 250
    else
        Speed = 200
    end

    TweenService:Create(
        Players.LocalPlayer.Character.HumanoidRootPart,
        TweenInfo.new(Distance / Speed, Enum.EasingStyle.Linear),
        {CFrame = Pos}
    ):Play()
end

-- Configurações de ataque rápido
local Client = Players.LocalPlayer
local STOP = require(Client.PlayerScripts.CombatFramework.Particle)
local STOPRL = require(ReplicatedStorage.CombatFramework.RigLib)

spawn(function()
    while task.wait() do
        pcall(function()
            if not shared.orl then shared.orl = STOPRL.wrapAttackAnimationAsync end
            if not shared.cpc then shared.cpc = STOP.play end
            STOPRL.wrapAttackAnimationAsync = function(a,b,c,d,func)
                local Hits = STOPRL.getBladeHits(b,c,d)
                if Hits then
                    if _G.FastAttack then
                        STOP.play = function() end
                        a:Play(0.01,0.01,0.01)
                        func(Hits)
                        STOP.play = shared.cpc
                        wait(a.length * 0.5)
                        a:Stop()
                    else
                        a:Play()
                    end
                end
            end
        end)
    end
end)

function AttackHit()
    local CombatFrameworkLib = debug.getupvalues(require(Players.LocalPlayer.PlayerScripts.CombatFramework))
    local CmrFwLib = CombatFrameworkLib[2]
    local plr = Players.LocalPlayer
    for i = 1, 1 do
        local bladehit = require(ReplicatedStorage.CombatFramework.RigLib).getBladeHits(plr.Character, {plr.Character.HumanoidRootPart}, 60)
        local cac = {}
        local hash = {}
        for k, v in pairs(bladehit) do
            if v.Parent:FindFirstChild("HumanoidRootPart") and not hash[v.Parent] then
                table.insert(cac, v.Parent.HumanoidRootPart)
                hash[v.Parent] = true
            end
        end
        bladehit = cac
        if #bladehit > 0 then
            pcall(function()
                CmrFwLib.activeController.timeToNextAttack = 1
                CmrFwLib.activeController.attacking = false
                CmrFwLib.activeController.blocking = false
                CmrFwLib.activeController.timeToNextBlock = 0
                CmrFwLib.activeController.increment = 3
                CmrFwLib.activeController.hitboxMagnitude = 120
                CmrFwLib.activeController.focusStart = 0
                ReplicatedStorage.RigControllerEvent:FireServer("weaponChange", tostring(GetBladeHit()))
                ReplicatedStorage.RigControllerEvent:FireServer("hit", bladehit, i, "")
            end)
        end
    end
end

spawn(function()
    while wait(0.1) do
        if _G.FastAttack then
            pcall(function()
                repeat task.wait(_G.FastAttackDelay)
                    AttackHit()
                until not _G.FastAttack
            end)
        end
    end
end)

RunService.RenderStepped:Connect(function()
    if _G.FastAttack then
        local y = debug.getupvalues(require(Players.LocalPlayer.PlayerScripts.CombatFramework))[2]
        pcall(function()
            if typeof(y) == "table" then
                y.activeController.timeToNextAttack = 0
                y.activeController.hitboxMagnitude = 60
                y.activeController.active = false
                y.activeController.timeToNextBlock = 0
                y.activeController.focusStart = 1655503339.0980349
                y.activeController.increment = 1
                y.activeController.blocking = false
                y.activeController.attacking = false
                y.activeController.humanoid.AutoRotate = true
            end
        end)
    end
end)

spawn(function()
    RunService.RenderStepped:Connect(function()
        if _G.FastAttack then
            Players.LocalPlayer.Character.Stun.Value = 0
            Players.LocalPlayer.Character.Busy.Value = false        
        end
    end)
end)

return AutoClickModule
